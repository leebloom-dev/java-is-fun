DESIGN PATTERNS - Model View Controller
======================================
Model View Controller (MVC) is a design pattern for developing user
interfaces that divide the programs logic into three components.

--------------------------------------
MODEL
An object that performs logistics to update the controller if any data
changes.

--------------------------------------
VIEW
Represents the visual component of the data that the model contains.

--------------------------------------
CONTROLLER
Performs actions between the model and the view. It controls how the
data flows into the model and update the view whenever data changes.
Therefore, the model and the view will only communicate with the
controller.

======================================
WHAT ARE WE BUILDING?

A simple program using the MVC design pattern to display some information
about a student. The user should be able to:
    - input the student's name
    - input the student's roll
    - display the student's name
    - display the student's roll

======================================
DESIGN

StudentIdCard
    +main(): void
    +retrieveStudentFromDatabase(): Student

StudentController
    -model: Student
    -view: StudentView

    +StudentController()
    +setStudentName(): void
    +getStudentName(): String
    +setStudentRoll(): void
    +getStudentRoll(): String
    +updateView(): void

StudentView
    +printStudentDetails(): void

StudentModel
    -name: String
    -roll: String

    +getName(): String
    +setName(): void
    +getRoll(): String
    +setRoll(): void